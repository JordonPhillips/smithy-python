name: CI

on:
    push:
        branches: develop
    pull_request:
        branches: develop

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1
      - name: Set Up Python - ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: |
          python${{ matrix.python-version }} -m pip install --upgrade tox
      - name: Run tests
        run: |
          tox -e py
      - name: Upload coverage
        if: matrix.python-version == 3.7
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          yml: ./codecov.yml
          fail_ci_if_error: true

  test-codegen:
    runs-on: ubuntu-latest
    name: Java ${{ matrix.java }}

    steps:
      - uses: actions/checkout@v2

      - name: Download Coretto 17 JDK
        run: |
          download_url="https://corretto.aws/downloads/latest/amazon-corretto-17-x64-linux-jdk.tar.gz"
          wget -O $RUNNER_TEMP/java_package.tar.gz $download_url

      - name: Set up Coretto 17 JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'jdkfile'
          jdkFile: ${{ runner.temp }}/java_package.tar.gz
          java-version: 17
          architecture: x64

      - name: clean and build
        run: cd codegen && ./gradlew clean build -Plog-tests
